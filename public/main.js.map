{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/contacts/contacts.component.css","webpack:///./src/app/components/contacts/contacts.component.html","webpack:///./src/app/components/contacts/contacts.component.ts","webpack:///./src/app/components/edit-user/edit-user.component.css","webpack:///./src/app/components/edit-user/edit-user.component.html","webpack:///./src/app/components/edit-user/edit-user.component.ts","webpack:///./src/app/components/home-admin/home-admin.component.css","webpack:///./src/app/components/home-admin/home-admin.component.html","webpack:///./src/app/components/home-admin/home-admin.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/user-week/user-week.component.css","webpack:///./src/app/components/user-week/user-week.component.html","webpack:///./src/app/components/user-week/user-week.component.ts","webpack:///./src/app/models/message.ts","webpack:///./src/app/models/user.ts","webpack:///./src/app/services/global.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,4HAA4H,SAAS,2iD;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1E;AACM;AACX;AAOtD;IAIE,sBACU,MAAsB,EACtB,OAAe,EACf,YAAyB;QAFzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QAEjC,IAAI,CAAC,KAAK,GAAG,iCAAiC,CAAC;IACjD,CAAC;IAED,+BAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;IAED,gCAAS,GAAT;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClD,CAAC;IAED,6BAAM,GAAN;QACE,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACpC,CAAC;IAzBU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;YAEpB,SAAS,EAAE,CAAE,kEAAW,CAAE;SAC3B,CAAC;yCAMkB,8DAAc;YACb,sDAAM;YACD,kEAAW;OAPxB,YAAY,CA0BxB;IAAD,mBAAC;CAAA;AA1BwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACI;AACW;AAExD,UAAU;AACmD;AAE7D,aAAa;AACkC;AACqB;AACS;AACE;AACd;AACiB;AACL;AACE;AAyB/E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAtBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,gFAAc;gBACd,yFAAiB;gBACjB,2FAAiB;gBACjB,6EAAa;gBACb,+FAAkB;gBAClB,0FAAiB;gBACjB,4FAAiB;aAClB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,oDAAO;gBACP,qEAAgB;aACjB;YACD,SAAS,EAAE;gBACT,gEAAmB;aACpB;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACxCtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEvD,oBAAoB;AAC6C;AACiB;AACd;AACS;AACA;AACE;AACA;AAE/E,IAAM,SAAS,GAAW;IACtB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,6EAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,8FAAkB,EAAE;IACrD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,2FAAiB,EAAE;IACnD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,2FAAiB,EAAE;IACnD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE;CACzD,CAAC;AAEK,IAAM,mBAAmB,GAAU,EAAE,CAAC;AACtC,IAAM,OAAO,GAAwB,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;;;;;;;;;;;ACxB5E,mB;;;;;;;;;;;ACAA,wBAAwB,SAAS,wYAAwY,uDAAuD,OAAO,0DAA0D,YAAY,4BAA4B,aAAa,yBAAyB,kBAAkB,yBAAyB,cAAc,0pBAA0pB,mDAAmD,OAAO,yBAAyB,aAAa,yBAAyB,kBAAkB,yBAAyB,cAAc,yBAAyB,aAAa,yBAAyB,cAAc,gjBAAgjB,kBAAkB,6EAA6E,uBAAuB,yEAAyE,mBAAmB,usB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjxE;AACe;AACxB;AACiB;AAQ1D;IASE,2BACU,MAAsB,EACtB,OAAe,EACf,YAAyB;QAFzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QAP5B,UAAK,GAAY,EAAE,CAAC;QASzB,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,iDAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAgBC;QAfC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,SAAS,CACpC,kBAAQ;YACN,OAAO,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;YACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9C,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACnC;YACD,OAAO,CAAC,GAAG,CAAE,KAAI,CAAC,KAAK,CAAE,CAAC;QAC5B,CAAC,EAAE,eAAK;YACN,IAAM,YAAY,GAAQ,KAAK,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC1B,IAAK,YAAY,IAAI,IAAI,EAAG;gBAC1B,KAAI,CAAC,MAAM,GAAG,OAAO,CAAC;aACvB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,oCAAQ,GAAR,UAAU,MAAM;QACd,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,MAAM,EAAG;gBAClC,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBACvC,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBACzC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBACnD,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAC3C,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBACzC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;aAC5C;SACF;IACH,CAAC;IAED,sCAAU,GAAV,UAAY,MAAM;QAAlB,iBA4BC;QA3BC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,MAAM,EAAG;gBAClC,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBACvC,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBACzC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBACnD,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAC3C,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBACzC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;aAC5C;SACF;QAED,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC;QAC9B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC,SAAS,CACtD,kBAAQ;YACN,OAAO,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;YACxB,IAAK,QAAQ,CAAC,EAAE,EAAG;gBACjB,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;aAC1B;QACH,CAAC,EAAE,eAAK;YACN,IAAM,YAAY,GAAQ,KAAK,CAAC;YAChC,OAAO,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC;YAE5B,IAAK,YAAY,IAAI,IAAI,EAAE;gBACzB,KAAI,CAAC,MAAM,GAAG,OAAO,CAAC;aACvB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAoBC;QAnBC,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC;QAC9B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC,SAAS,CACtD,kBAAQ;YACN,OAAO,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;YACxB,IAAK,CAAC,QAAQ,CAAC,EAAE,EAAG;gBAClB,KAAI,CAAC,MAAM,GAAG,OAAO,CAAC;aACvB;iBAAM;gBACL,KAAI,CAAC,MAAM,GAAG,SAAS,CAAC;gBACxB,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;aAC1B;QACH,CAAC,EAAE,eAAK;YACN,IAAM,YAAY,GAAQ,KAAK,CAAC;YAChC,OAAO,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC;YAE5B,IAAK,YAAY,IAAI,IAAI,EAAE;gBACzB,KAAI,CAAC,MAAM,GAAG,OAAO,CAAC;aACvB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAxGU,iBAAiB;QAN7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;YAGxB,SAAS,EAAE,CAAE,kEAAW,CAAE;SAC3B,CAAC;yCAWkB,8DAAc;YACb,sDAAM;YACD,kEAAW;OAZxB,iBAAiB,CA0G7B;IAAD,wBAAC;CAAA;AA1G6B;;;;;;;;;;;;ACX9B,mB;;;;;;;;;;;ACAA,wBAAwB,SAAS,quBAAquB,aAAa,6WAA6W,kBAAkB,0WAA0W,IAAI,mCAAmC,cAAc,2UAA2U,iBAAiB,gL;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA31D;AACe;AACxB;AACiB;AAQ1D;IAQE,2BACU,MAAsB,EACtB,OAAe,EACf,YAAyB;QAFzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QAEjC,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,iDAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC;IAEF,oCAAQ,GAAR;IACA,CAAC;IAED,oCAAQ,GAAR,UAAU,IAAI;QAAd,iBAuBC;QAtBC,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC,SAAS,CACjD,kBAAQ;YACN,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAK,QAAQ,CAAC,EAAE,EAAG;gBACjB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAC9B,YAAY,CAAC,OAAO,CAAE,UAAU,EAAE,IAAI,CAAC,SAAS,CAAE,KAAI,CAAC,QAAQ,CAAE,CAAC,CAAC;gBACnE,IAAK,KAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,WAAW,EAAE;oBACvC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;iBAClC;qBAAM;oBACL,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;iBACxC;aACF;QACH,CAAC,EAAE,eAAK;YACN,IAAM,YAAY,GAAQ,KAAK,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC1B,IAAK,YAAY,IAAI,IAAI,EAAG;gBAC1B,KAAI,CAAC,MAAM,GAAG,OAAO,CAAC;aACvB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IA7CU,iBAAiB;QAN7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;YAGzB,SAAS,EAAE,CAAE,kEAAW,CAAE;SAC3B,CAAC;yCAUkB,8DAAc;YACb,sDAAM;YACD,kEAAW;OAXxB,iBAAiB,CA+C7B;IAAD,wBAAC;CAAA;AA/C6B;;;;;;;;;;;;ACX9B,mB;;;;;;;;;;;ACAA,0HAA0H,aAAa,GAAG,aAAa,GAAG,kBAAkB,q+BAAq+B,gBAAgB,ujB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/mC;AACe;AAElB;AACW;AAQ1D;IAQE,4BACU,MAAsB,EACtB,OAAe,EACf,YAAyB;QAFzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QAEjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,uDAAO,CAAC,EAAE,EAAE,EAAE,EAAG,EAAE,CAAC,CAAC;QACrC,IAAI,CAAC,OAAO,GAAG,IAAI,uDAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACzC,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,qCAAQ,GAAR,UAAU,IAAI;QAAd,iBAiBC;QAhBC,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QACjC,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAEzB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC,SAAS,CAClD,kBAAQ;YACN,OAAO,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;YACxB,IAAK,QAAQ,CAAC,EAAE,EAAG;gBACjB,KAAI,CAAC,MAAM,GAAG,SAAS,CAAC;gBACxB,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,KAAI,CAAC,eAAe,EAAE,CAAC;aACxB;QACH,CAAC,EAAE,eAAK;YACN,OAAO,CAAC,GAAG,CAAO,KAAK,CAAE,CAAC;QAC5B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,4CAAe,GAAf;QAAA,iBAiBC;QAhBC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,SAAS,CACtC,kBAAQ;YACN,OAAO,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;YACxB,IAAK,QAAQ,CAAC,EAAE,EAAG;gBACjB,KAAI,CAAC,OAAO,CAAC,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC;gBACxC,KAAI,CAAC,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC;gBAC1C,KAAI,CAAC,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC;aACjD;QACH,CAAC,EAAE,eAAK;YACN,IAAM,YAAY,GAAQ,KAAK,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC1B,IAAK,YAAY,KAAK,IAAI,EAAG;gBAC3B,KAAI,CAAC,MAAM,GAAG,OAAO,CAAC;aACvB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,0CAAa,GAAb;QAAA,iBAcC;QAbC,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAE,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAE,CAAC,SAAS,CAC3D,kBAAQ;YACN,OAAO,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;YACxB,KAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,EAAE,eAAK;YACN,IAAM,YAAY,GAAQ,KAAK,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC1B,IAAK,YAAY,KAAK,IAAI,EAAG;gBAC3B,KAAI,CAAC,MAAM,GAAG,OAAO,CAAC;aACvB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IA3EU,kBAAkB;QAN9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;YAG1B,SAAS,EAAE,CAAE,kEAAW,CAAE;SAC3B,CAAC;yCAUkB,8DAAc;YACb,sDAAM;YACD,kEAAW;OAXxB,kBAAkB,CA6E9B;IAAD,yBAAC;CAAA;AA7E8B;;;;;;;;;;;;ACZ/B,mB;;;;;;;;;;;ACAA,gIAAgI,aAAa,GAAG,kBAAkB,skBAAskB,gBAAgB,qF;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtsB;AACe;AAElB;AACW;AAQ1D;IAUE,uBACU,MAAsB,EACtB,OAAe,EACf,YAAyB;QAFzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QAEjC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,IAAI,uDAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACzC,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAoBC;QAnBC,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,SAAS,CACtC,kBAAQ;YAEN,IAAK,QAAQ,CAAC,EAAE,EAAG;gBAEjB,OAAO,CAAC,GAAG,CAAE,QAAQ,CAAC,OAAO,CAAE,CAAC;gBAChC,KAAI,CAAC,OAAO,CAAC,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC;gBACxC,KAAI,CAAC,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC;gBAC1C,KAAI,CAAC,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC;aACjD;QACH,CAAC,EAAE,eAAK;YACN,IAAM,YAAY,GAAQ,KAAK,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC1B,IAAK,YAAY,KAAK,IAAI,EAAG;gBAC3B,KAAI,CAAC,MAAM,GAAG,OAAO,CAAC;aACvB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAzCU,aAAa;QANzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;YAGpB,SAAS,EAAE,CAAE,kEAAW,CAAE;SAC3B,CAAC;yCAYkB,8DAAc;YACb,sDAAM;YACD,kEAAW;OAbxB,aAAa,CA2CzB;IAAD,oBAAC;CAAA;AA3CyB;;;;;;;;;;;;ACZ1B,mB;;;;;;;;;;;ACAA,qDAAqD,SAAS,ovBAAovB,IAAI,i7B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApwB;AACe;AACxB;AACiB;AAQ1D;IAQE,wBACU,MAAsB,EACtB,OAAe,EACf,YAAyB;QAFzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QAEjC,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,iDAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IAC3D,CAAC;IAED,iCAAQ,GAAR;IACA,CAAC;IAED,iCAAQ,GAAR;QAAA,iBA6BC;QA5BC,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAEzB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC,SAAS,CAC7C,kBAAQ;YACN,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAK,CAAC,KAAI,CAAC,QAAQ,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,GAAG,EAAG;gBAC1C,KAAI,CAAC,MAAM,GAAG,OAAO,CAAC;aACvB;iBAAM,IAAK,CAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAG;gBAClC,KAAI,CAAC,MAAM,GAAG,UAAU,CAAC;aAC1B;iBAAM;gBACL,YAAY,CAAC,OAAO,CAAE,UAAU,EAAE,IAAI,CAAC,SAAS,CAAE,KAAI,CAAC,QAAQ,CAAE,CAAC,CAAC;gBAEnE,KAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAK,KAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,WAAW,EAAE;oBACvC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;iBAClC;qBAAM;oBACL,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;iBACxC;aACF;QACH,CAAC,EAAE,eAAK;YACN,IAAM,YAAY,GAAQ,KAAK,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC1B,IAAK,YAAY,KAAK,IAAI,EAAG;gBAC3B,KAAI,CAAC,MAAM,GAAG,OAAO,CAAC;aACvB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAmBC;QAlBC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAE,IAAI,CAAC,IAAI,EAAE,MAAM,CAAE,CAAC,SAAS,CACrD,kBAAQ;YACN,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAE,KAAI,CAAC,KAAK,CAAE,CAAC;YAC1B,IAAK,KAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAG;gBAC5B,KAAI,CAAC,MAAM,GAAG,OAAO,CAAC;aACvB;iBAAM;gBACL,YAAY,CAAC,OAAO,CAAE,OAAO,EAAE,KAAI,CAAC,KAAK,CAAE,CAAC;gBAC5C,KAAI,CAAC,MAAM,GAAG,SAAS,CAAC;aACzB;QACH,CAAC,EAAE,eAAK;YACN,IAAM,YAAY,GAAQ,KAAK,CAAC;YAChC,OAAO,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC;YAC5B,IAAK,YAAY,KAAK,IAAI,EAAG;gBAC3B,KAAI,CAAC,MAAM,GAAG,OAAO,CAAC;aACvB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,gCAAO,GAAP;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACvC,CAAC;IA1EU,cAAc;QAN1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;YAGrB,SAAS,EAAE,CAAE,kEAAW,CAAE;SAC3B,CAAC;yCAUkB,8DAAc;YACb,sDAAM;YACD,kEAAW;OAXxB,cAAc,CA6E1B;IAAD,qBAAC;CAAA;AA7E0B;;;;;;;;;;;;ACX3B,mB;;;;;;;;;;;ACAA,wBAAwB,SAAS,0qDAA0qD,IAAI,yjB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7pD;AACe;AACxB;AACiB;AAQ1D;IAME,2BACU,MAAsB,EACtB,OAAe,EACf,YAAyB;QAFzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QAEjC,IAAI,CAAC,KAAK,GAAG,+BAA+B,CAAC;QAC7C,IAAI,CAAC,IAAI,GAAG,IAAI,iDAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,oCAAQ,GAAR;IACA,CAAC;IAED,oCAAQ,GAAR,UAAU,IAAI;QAAd,iBAaC;QAZC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC,SAAS,CAC/C,kBAAQ;YACN,IAAI,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;gBACtC,KAAI,CAAC,MAAM,GAAG,SAAS,CAAC;gBACxB,IAAI,CAAC,KAAK,EAAE,CAAC;aACd;iBAAM;gBACL,KAAI,CAAC,MAAM,GAAG,OAAO,CAAC;aACvB;QACH,CAAC,EAAE,eAAK;YACN,OAAO,CAAC,GAAG,CAAM,KAAK,CAAC,CAAC;QAC1B,CAAC,CACF,CAAC;IACJ,CAAC;IA/BU,iBAAiB;QAN7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;YAGxB,SAAS,EAAE,CAAE,kEAAW,CAAE;SAC3B,CAAC;yCAQkB,8DAAc;YACb,sDAAM;YACD,kEAAW;OATxB,iBAAiB,CAkC7B;IAAD,wBAAC;CAAA;AAlC6B;;;;;;;;;;;;ACX9B,mB;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;;ACP9B;AAAA;AAAA;IACI,iBACW,GAAW,EACX,IAAY,EACZ,IAAY;QAFZ,QAAG,GAAH,GAAG,CAAQ;QACX,SAAI,GAAJ,IAAI,CAAQ;QACZ,SAAI,GAAJ,IAAI,CAAQ;IACpB,CAAC;IACR,cAAC;AAAD,CAAC;;;;;;;;;;;;;;ACND;AAAA;AAAA;IACI,cACW,GAAW,EACX,IAAY,EACZ,SAAiB,EACjB,KAAa,EACb,QAAgB,EAChB,IAAY,EACZ,KAAa;QANb,QAAG,GAAH,GAAG,CAAQ;QACX,SAAI,GAAJ,IAAI,CAAQ;QACZ,cAAS,GAAT,SAAS,CAAQ;QACjB,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAQ;QAChB,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAQ;IACrB,CAAC;IACR,WAAC;AAAD,CAAC;;;;;;;;;;;;;;ACVD;AAAA;AAAO,IAAI,MAAM,GAAG;IAChB,GAAG,EAAE,OAAO;CACf,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFyC;AACoB;AAI7B;AAGlC;IAOI,qBAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QACjC,IAAI,CAAC,GAAG,GAAG,8CAAM,CAAC,GAAG,CAAC;IAC1B,CAAC;IAED,8BAAQ,GAAR,UAAU,IAAU;QAChB,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAE,IAAI,CAAE,CAAC;QACtC,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,GAAG,GAAG,UAAU,EAAE,MAAM,EAAE,EAAE,OAAO,EAAG,OAAO,EAAE,CAAC,CAAC;IAClF,CAAC;IAED,4BAAM,GAAN,UAAQ,IAAS,EAAE,QAAkB;QAAlB,6CAAkB;QACjC,IAAK,QAAQ,KAAK,OAAO,EAAE;YACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;QAED,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAE,IAAI,CAAE,CAAC;QACtC,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,MAAM,EAAE,EAAE,OAAO,EAAG,OAAO,EAAE,CAAC,CAAC;IAC/E,CAAC;IAED,iCAAW,GAAX;QACI,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAE,YAAY,CAAC,OAAO,CAAE,UAAU,CAAE,CAAE,CAAC;QAClE,IAAK,QAAQ,KAAK,WAAW,EAAG;YAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;aAAM;YACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACxB;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED,8BAAQ,GAAR;QACI,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAK,KAAK,KAAK,WAAW,EAAG;YACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACtB;aAAM;YACH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACrB;QACD,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,gCAAU,GAAV;QACI,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,mCAAmC,CAAC;aACrE,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,GAAG,GAAG,aAAa,EAAE,EAAE,OAAO,EAAG,OAAO,EAAE,CAAC,CAAC;IAC5E,CAAC;IAED,iCAAW,GAAX,UAAa,OAAgB;QACzB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAE,OAAO,CAAE,CAAC;QACzC,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAChH,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,GAAG,GAAG,SAAS,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACjF,CAAC;IAED,mCAAa,GAAb,UAAe,SAAS;QACpB,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,mCAAmC,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QACjI,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IAAI,CAAC,GAAG,GAAG,iBAAiB,GAAI,SAAS,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC/F,CAAC;IAED,8BAAQ,GAAR;QACI,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAChH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACrE,CAAC;IAED,gCAAU,GAAV,UAAY,IAAU;QAClB,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAChH,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IAAI,CAAC,GAAG,GAAG,cAAc,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAE,CAAC;IAC3F,CAAC;IAED,gCAAU,GAAV,UAAY,IAAU;QAClB,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAE,IAAI,CAAE,CAAC;QACtC,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAChH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,GAAG,GAAG,cAAc,GAAG,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,OAAO,EAAG,OAAO,EAAE,CAAC,CAAC;IAChG,CAAC;IAED,qCAAe,GAAf,UAAiB,IAAU;QACvB,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAE,IAAI,CAAE,CAAC;QACtC,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAChH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,GAAG,GAAG,oBAAoB,GAAG,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACrG,CAAC;IArFQ,WAAW;QADvB,gEAAU,EAAE;yCAQkB,+DAAU;OAP5B,WAAW,CAuFvB;IAAD,kBAAC;CAAA;AAvFuB;;;;;;;;;;;;;ACRxB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{ title }}</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavAltMarkup\\\" aria-controls=\\\"navbarNavAltMarkup\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavAltMarkup\\\" *ngIf=\\\"identity\\\">\\n    <div class=\\\"navbar-nav\\\">\\n      <div *ngIf=\\\"this.identity.level == 'USER_ROLE'\\\">\\n          <a class=\\\"nav-item nav-link active\\\" [routerLink]=\\\"['/home']\\\" routerLinkActive=\\\"active\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </div>\\n      <div *ngIf=\\\"this.identity.level == 'ADMIN_ROLE'\\\">\\n          <a class=\\\"nav-item nav-link active\\\" [routerLink]=\\\"['/home-admin']\\\" routerLinkActive=\\\"active\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </div>\\n      <a class=\\\"nav-item nav-link disabled\\\" (click)=\\\"logout()\\\" routerLinkActive=\\\"active\\\">LogOut</a>\\n      <a class=\\\"nav-item nav-link disabled\\\" href=\\\"#\\\" routerLinkActive=\\\"active\\\">About Me</a>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavAltMarkup\\\" *ngIf=\\\"!identity\\\">\\n    <div class=\\\"navbar-nav\\\">\\n      <a class=\\\"nav-item nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n      <a class=\\\"nav-item nav-link\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\n      <a class=\\\"nav-item nav-link disabled\\\" href=\\\"#\\\">About Me</a>\\n    </div>\\n  </div>\\n\\n</nav>\\n\\n<div class=\\\"container main-container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit, DoCheck } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { UserService } from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  providers: [ UserService ]\n})\nexport class AppComponent implements OnInit, DoCheck {\n  public title: string;\n  public identity;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _userService: UserService\n  ) {\n    this.title = 'Employee Management Application';\n  }\n\n  ngOnInit() {\n    this.identity = this._userService.getIdentity();\n    console.log(this.identity);\n  }\n\n  ngDoCheck() {\n    this.identity = this._userService.getIdentity();\n  }\n\n  logout() {\n    localStorage.clear();\n    this.identity = null;\n    this._router.navigate(['/login']);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n// routing\nimport { routing, appRoutingProviders } from './app.routing';\n\n// components\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ContactsComponent } from './components/contacts/contacts.component';\nimport { EditUserComponent } from './components/edit-user/edit-user.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { HomeAdminComponent } from './components/home-admin/home-admin.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { UserWeekComponent } from './components/user-week/user-week.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ContactsComponent,\n    EditUserComponent,\n    HomeComponent,\n    HomeAdminComponent,\n    RegisterComponent,\n    UserWeekComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing,\n    HttpClientModule\n  ],\n  providers: [\n    appRoutingProviders\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// import components\nimport { HomeComponent } from './components/home/home.component';\nimport { HomeAdminComponent } from './components/home-admin/home-admin.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ContactsComponent } from './components/contacts/contacts.component';\nimport { EditUserComponent } from './components/edit-user/edit-user.component';\nimport { UserWeekComponent } from './components/user-week/user-week.component';\n\nconst appRoutes: Routes = [\n    { path: 'home', component: HomeComponent },\n    { path: 'home-admin', component: HomeAdminComponent },\n    { path: 'login', component: LoginComponent },\n    { path: 'register', component: RegisterComponent },\n    { path: 'edit-user', component: EditUserComponent },\n    { path: 'contacts', component: ContactsComponent },\n    { path: 'user-week', component: UserWeekComponent },\n    { path: '**', pathMatch: 'full', redirectTo: 'login' }\n];\n\nexport const appRoutingProviders: any[] = [];\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n","module.exports = \"\"","module.exports = \"<h1>{{ title }}</h1>\\n<hr>\\n<div *ngIf=\\\"this.identity.role == 'USER_ROLE'\\\">\\n    <table class=\\\"table\\\" >\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\"></th>\\n            <th scope=\\\"col\\\">First Name</th>\\n            <th scope=\\\"col\\\">Last Name</th>\\n            <th scope=\\\"col\\\">Email</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let user of users; let i = index\\\">\\n            <!--<th scope=\\\"row\\\">{{ i+1 }}</th>-->\\n            <td><input type=\\\"checkbox\\\" id=\\\"{{user.email}}\\\"></td>\\n            <td>{{ user.name }}</td>\\n            <td>{{ user.last_name }}</td>\\n            <td>{{ user.email }}</td>\\n          </tr>\\n          \\n        </tbody>\\n      </table>\\n\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addArr()\\\">Send Email</button>\\n</div>\\n\\n<div *ngIf=\\\"this.identity.role == 'ADMIN_ROLE'\\\">\\n    <table class=\\\"table\\\" >\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\"></th>\\n            <th scope=\\\"col\\\">First Name</th>\\n            <th scope=\\\"col\\\">Last Name</th>\\n            <th scope=\\\"col\\\">Email</th>\\n            <th scope=\\\"col\\\">Role</th>\\n            <th scope=\\\"col\\\">Level</th>\\n            <th></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let user of users; let i = index\\\">\\n            <th scope=\\\"row\\\">{{ i+1 }}</th>\\n            <td>{{ user.name }}</td>\\n            <td>{{ user.last_name }}</td>\\n            <td>{{ user.email }}</td>\\n            <td>{{ user.role }}</td>\\n            <td>{{ user.level }}</td>\\n            <td *ngIf=\\\"identity._id != user._id\\\">\\n              <input type=\\\"button\\\" (click)=\\\"editUser( user._id )\\\"\\n                class=\\\"btn btn-primary\\\" value=\\\"Edit\\\"/>\\n              <input type=\\\"button\\\" (click)=\\\"deleteUser( user._id )\\\"\\n                class=\\\"btn btn-danger\\\" value=\\\"Delete\\\"/>\\n            </td>\\n          </tr>\\n          \\n        </tbody>\\n      </table>\\n</div>\\n\\n<div *ngIf=\\\"status == 'edit'\\\">\\n  <form #userEdit=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <p>\\n      <label>Name:</label>\\n      <label>{{ temp_user.name }}</label>\\n    </p>\\n    <p>\\n      <label>Last Name:</label>\\n      <label>{{ temp_user.last_name }}</label>\\n    </p>\\n    <p>\\n      <label>Email:</label>\\n      <label>{{ temp_user.email }}</label>\\n    </p>\\n    <p>\\n      <label>Role:</label>\\n      <input \\n        type=\\\"text\\\"\\n        name=\\\"role\\\"\\n        #role=\\\"ngModel\\\"\\n        [(ngModel)]=\\\"temp_user.role\\\"\\n        class=\\\"form-control\\\"\\n        placeholder=\\\"temp_user.role\\\"/>\\n    </p>\\n    <p>\\n        <label>Level:</label>\\n        <input \\n          type=\\\"text\\\"\\n          name=\\\"level\\\"\\n          #level=\\\"ngModel\\\"\\n          [(ngModel)]=\\\"temp_user.level\\\"\\n          class=\\\"form-control\\\"\\n          placeholder=\\\"temp_user.level\\\"/>\\n      </p>\\n      <input \\n        type=\\\"submit\\\"\\n        value=\\\"Send\\\"\\n        class=\\\"btn btn-warning\\\"\\n        [disabled]=\\\"!userEdit.form.valid\\\"/>\\n  </form>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css'],\n  providers: [ UserService ]\n})\nexport class ContactsComponent implements OnInit {\n\n  public title: string;\n  public user: User;\n  public temp_user: User;\n  public users: User [] = [];\n  public identity;\n  public status;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _userService: UserService\n  ) {\n    this.title = 'List Contacts';\n    this.user = this._userService.getIdentity();\n    this.identity = this.user;\n    this.temp_user = new User('', '', '', '', '', '', '');\n  }\n\n  ngOnInit() {\n    this._userService.getUsers().subscribe(\n      response => {\n        console.log( response );\n        for (let i = 0; i < response.users.length; i++) {\n          this.users[i] = response.users[i];\n        }\n        console.log( this.users );\n      }, error => {\n        const errorMensage = <any>error;\n        console.log(errorMensage);\n        if ( errorMensage != null ) {\n          this.status = 'error';\n        }\n      }\n    );\n  }\n\n  editUser( userId ) {\n    console.log(userId);\n    this.status = 'edit';\n\n    for (let i = 0; i < this.users.length; i++) {\n      if ( this.users[i]._id === userId ) {\n        this.temp_user._id = this.users[i]._id;\n        this.temp_user.name = this.users[i].name;\n        this.temp_user.last_name = this.users[i].last_name;\n        this.temp_user.email = this.users[i].email;\n        this.temp_user.role = this.users[i].role;\n        this.temp_user.level = this.users[i].level;\n      }\n    }\n  }\n\n  deleteUser( userId ) {\n    for (let i = 0; i < this.users.length; i++) {\n      if ( this.users[i]._id === userId ) {\n        this.temp_user._id = this.users[i]._id;\n        this.temp_user.name = this.users[i].name;\n        this.temp_user.last_name = this.users[i].last_name;\n        this.temp_user.email = this.users[i].email;\n        this.temp_user.role = this.users[i].role;\n        this.temp_user.level = this.users[i].level;\n      }\n    }\n\n    console.log( this.temp_user );\n    this._userService.deleteUser( this.temp_user ).subscribe(\n      response => {\n        console.log( response );\n        if ( response.ok ) {\n          window.location.reload();\n        }\n      }, error => {\n        const errorMensage = <any>error;\n        console.log( errorMensage );\n\n        if ( errorMensage != null) {\n          this.status = 'error';\n        }\n      }\n    );\n  }\n\n  onSubmit() {\n    console.log( this.temp_user );\n    this._userService.updateUser( this.temp_user ).subscribe(\n      response => {\n        console.log( response );\n        if ( !response.ok ) {\n          this.status = 'error';\n        } else {\n          this.status = 'success';\n          window.location.reload();\n        }\n      }, error => {\n        const errorMensage = <any>error;\n        console.log( errorMensage );\n\n        if ( errorMensage != null) {\n          this.status = 'error';\n        }\n      }\n    );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>{{ title }}</h1>\\n<hr>\\n<form #updateForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit( updateForm )\\\">\\n\\n    <!--<div class=\\\"alert alert-success\\\" *ngIf=\\\"status == 'success' \\\">\\n        Register success!! \\n        <a [routerLink]=\\\"['/login']\\\">Sign In Here</a>\\n      </div>\\n    \\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"status == 'error' \\\">\\n       Please try again in another data\\n      </div>-->\\n    <div class=\\\"form-row\\\">\\n\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"inputName4\\\">First Name</label>\\n          <input type=\\\"text\\\"\\n                name=\\\"name\\\"\\n                #name=\\\"ngModel\\\"\\n                [(ngModel)]=\\\"user.name\\\"\\n                class=\\\"form-control\\\"\\n                placeholder=\\\"{{ user.name }}\\\">\\n        </div>\\n  \\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"inputLastName4\\\">Last Name</label>\\n          <input type=\\\"text\\\"\\n                  name=\\\"last_name\\\"\\n                  #last_name=\\\"ngModel\\\"\\n                  [(ngModel)]=\\\"user.last_name\\\"\\n                 class=\\\"form-control\\\"\\n                 placeholder=\\\"{{ user.last_name }}\\\">\\n        </div>\\n  \\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"inputEmail\\\">Email</label>\\n          <input type=\\\"email\\\"\\n              name=\\\"email\\\"\\n              #email=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"user.email\\\"\\n              class=\\\"form-control\\\"\\n              pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\"\\n              placeholder=\\\"{{ user.email }}\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"inputPassword\\\">Password</label>\\n          <input type=\\\"password\\\"\\n              name=\\\"password\\\"\\n              #password=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"user.password\\\"\\n              class=\\\"form-control\\\"\\n              placeholder=\\\"{{ user.password }}\\\">\\n      </div>\\n    \\n    <button\\n       type=\\\"submit\\\"\\n       class=\\\"btn btn-primary\\\"\\n      [disabled]=\\\"!updateForm.form.valid\\\">Update Data</button>\\n  </form>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css'],\n  providers: [ UserService ]\n})\nexport class EditUserComponent implements OnInit {\n\n  public title: string;\n  public user: User;\n  public temp: User;\n  public identity;\n  public status: string;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _userService: UserService\n  ) {\n    this.title = 'Update Data';\n    this.user = this._userService.getIdentity();\n    this.identity = this.user;\n    this.temp = new User('', '', '', '', '', '', '');\n   }\n\n  ngOnInit() {\n  }\n\n  onSubmit( form ) {\n    console.log( this.user );\n    this.temp = this.user;\n    this._userService.updateUser( this.user ).subscribe(\n      response => {\n        console.log(response);\n        if ( response.ok ) {\n          this.identity = response.user;\n          localStorage.setItem( 'identity', JSON.stringify( this.identity ));\n          if ( this.identity.role === 'USER_ROLE') {\n            this._router.navigate(['/home']);\n          } else {\n            this._router.navigate(['/home-admin']);\n          }\n        }\n      }, error => {\n        const errorMensage = <any>error;\n        console.log(errorMensage);\n        if ( errorMensage != null ) {\n          this.status = 'error';\n        }\n      }\n    );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <header>\\n    <div class=\\\"content\\\">\\n      <h3 class=\\\"title\\\">Welcome {{ user.role }} {{ user.name }} {{ user.last_name }}</h3>\\n      <hr>\\n    </div>\\n  </header>\\n  <div class=\\\"container\\\">\\n      <main>\\n          <div>\\n              <h4>Menu</h4>\\n              <ul>\\n                <li><a href=\\\"#\\\">My Profile</a></li>\\n                <li><a [routerLink]=\\\"['/edit-user']\\\">Edit Profile</a></li>\\n                <li><a [routerLink]=\\\"['/contacts']\\\">Contacts</a></li>\\n                <!--<li><a [routerLink]=\\\"['/builder-week']\\\">Builder Week</a></li>-->\\n              </ul>\\n            </div>\\n      </main>\\n      <aside>\\n        <div>\\n          <div class=\\\"form-group\\\">\\n            <h4><label for=\\\"comment\\\">Message:</label></h4>\\n            <form #messageForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit( messageForm )\\\">\\n              <textarea\\n                  name=\\\"text\\\"\\n                  #text=\\\"ngModel\\\"\\n                  [(ngModel)]=\\\"text.text\\\" \\n                  class=\\\"form-control\\\"\\n                  rows=\\\"5\\\"\\n                  id=\\\"comment\\\"\\n                  placeholder=\\\"{{ message.text }}\\\">\\n                  \\n                </textarea>\\n                \\n              <br>\\n              <input \\n                type=\\\"submit\\\"\\n                value=\\\"Send\\\"\\n                class=\\\"btn btn-success\\\"\\n                [disabled]=\\\"!messageForm.form.valid\\\" />\\n              <input\\n               type=\\\"submit\\\"\\n               value=\\\"Delete\\\"\\n               class=\\\"btn btn-danger\\\"\\n                (click)=\\\"deleteMessage()\\\"/>\\n            </form>\\n            \\n          </div>\\n        </div>\\n      </aside>\\n  </div>\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { User } from '../../models/user';\nimport { Message } from '../../models/message';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-home-admin',\n  templateUrl: './home-admin.component.html',\n  styleUrls: ['./home-admin.component.css'],\n  providers: [ UserService ]\n})\nexport class HomeAdminComponent implements OnInit {\n\n  public user: User;\n  public identity;\n  public text: Message;\n  public message: Message;\n  public status: string;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _userService: UserService\n  ) {\n    this.user = this._userService.getIdentity();\n    this.identity = this.user;\n    this.text = new Message('', '' , '');\n    this.message = new Message('', '', '');\n  }\n\n  ngOnInit() {\n    this.refreshTextArea();\n  }\n\n  onSubmit( form ) {\n    console.log( form.value );\n    this.text.text = form.value.text;\n    console.log( this.text );\n\n    this._userService.sendMessage( this.text ).subscribe(\n      response => {\n        console.log( response );\n        if ( response.ok ) {\n          this.status = 'success';\n          form.reset();\n          this.refreshTextArea();\n        }\n      }, error => {\n        console.log( <any>error );\n      }\n    );\n  }\n\n  refreshTextArea() {\n    this._userService.getMessage().subscribe(\n      response => {\n        console.log( response );\n        if ( response.ok ) {\n          this.message._id = response.message._id;\n          this.message.text = response.message.text;\n          this.message.date = response.message.created_at;\n        }\n      }, error => {\n        const errorMessage = <any>error;\n        console.log(errorMessage);\n        if ( errorMessage !== null ) {\n          this.status = 'error';\n        }\n      }\n    );\n  }\n\n  deleteMessage() {\n    console.log( this.message._id );\n    this._userService.deleteMessage( this.message._id ).subscribe(\n      response => {\n        console.log( response );\n        this.refreshTextArea();\n      }, error => {\n        const errorMessage = <any>error;\n        console.log(errorMessage);\n        if ( errorMessage !== null ) {\n          this.status = 'error';\n        }\n      }\n    );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<br>\\n<div class=\\\"container\\\">\\n  <header>\\n    <div class=\\\"content\\\">\\n      <h3 class=\\\"title\\\">Welcome {{ user.name }} {{ user.last_name }}</h3>\\n      <hr>\\n    </div>\\n  </header>\\n  <div class=\\\"container\\\">\\n      <main>\\n          <div>\\n              <h4>Menu</h4>\\n              <ul>\\n                <li><a href=\\\"#\\\">My Profile</a></li>\\n                <li><a [routerLink]=\\\"['/edit-user']\\\">Edit Profile</a></li>\\n                <li><a [routerLink]=\\\"['/contacts']\\\">Contacts</a></li>\\n                <li><a [routerLink]=\\\"['/user-week']\\\">Week</a></li>\\n              </ul>\\n            </div>\\n      </main>\\n      <aside>\\n        <div>\\n          <h4>Message:</h4>\\n            <ul>\\n              <li>{{ message.text }}</li>\\n            </ul>\\n        </div>\\n      </aside>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { User } from '../../models/user';\nimport { Message } from '../../models/message';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  providers: [ UserService ]\n})\nexport class HomeComponent implements OnInit {\n\n  public user: User;\n  public message: Message;\n  public text: any;\n  public messages: string[];\n  public idenity;\n  public token;\n  public status: string;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _userService: UserService\n  ) {\n    this.messages = [];\n    this.user = this._userService.getIdentity();\n    this.idenity = this.user;\n    this.message = new Message('', '', '');\n  }\n\n  ngOnInit() {\n    console.log( this.user );\n    this._userService.getMessage().subscribe(\n      response => {\n\n        if ( response.ok ) {\n\n          console.log( response.message );\n          this.message._id = response.message._id;\n          this.message.text = response.message.text;\n          this.message.date = response.message.created_at;\n        }\n      }, error => {\n        const errorMessage = <any>error;\n        console.log(errorMessage);\n        if ( errorMessage !== null ) {\n          this.status = 'error';\n        }\n      }\n    );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-log-5\\\">\\n  <h1>{{ title }}</h1>\\n  <hr>\\n\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"status == 'error' \\\">\\n\\t\\tPlease check email/password\\n  </div>\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"status == 'remenber' \\\">\\n\\t\\tI remember you, if you want connect to admin\\n\\t</div>\\n\\n  <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"inputEmail3\\\"\\n         class=\\\"col-sm-2 col-form-label\\\">Email</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"email\\\"\\n                name=\\\"email\\\"\\n                #email=\\\"ngModel\\\"\\n                [(ngModel)]=\\\"user.email\\\"\\n                class=\\\"form-control\\\"\\n                required\\n                pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\"\\n                placeholder=\\\"Email\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"inputPassword3\\\"\\n               class=\\\"col-sm-2 col-form-label\\\">Password</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"password\\\"\\n                 class=\\\"form-control\\\"\\n                  name=\\\"password\\\"\\n                  #password=\\\"ngModel\\\"\\n                  [(ngModel)]=\\\"user.password\\\"\\n                  required\\n                  placeholder=\\\"Password\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row\\\">\\n        <div class=\\\"col-sm-10\\\">\\n          <button \\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-primary\\\"\\n            [disabled]=\\\"!loginForm.form.valid\\\">Sign in</button>\\n            <a class=\\\"nav-item nav-link disabled\\\" (click)=\\\"newUser()\\\">New User? Click me</a>\\n        </div>\\n      </div>\\n    </form>\\n\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers: [ UserService ]\n})\nexport class LoginComponent implements OnInit {\n\n  public title: string;\n  public user: User;\n  public status: string;\n  public identity;\n  public token;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _userService: UserService\n  ) {\n    this.title = 'Sign In please';\n    this.user = new User('', '', '', '', '', 'USER', 'USER');\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    console.log( this.user );\n\n    this._userService.signup( this.user ).subscribe(\n      response => {\n        this.identity = response.user;\n        console.log(this.identity);\n        if ( !this.identity || !this.identity._id ) {\n          this.status = 'error';\n        } else if ( !this.identity.status ) {\n          this.status = 'remenber';\n        } else {\n          localStorage.setItem( 'identity', JSON.stringify( this.identity ));\n\n          this.getToken();\n          if ( this.identity.role === 'USER_ROLE') {\n            this._router.navigate(['/home']);\n          } else {\n            this._router.navigate(['/home-admin']);\n          }\n        }\n      }, error => {\n        const errorMessage = <any>error;\n        console.log(errorMessage);\n        if ( errorMessage !== null ) {\n          this.status = 'error';\n        }\n      }\n    );\n  }\n\n  getToken() {\n    this._userService.signup( this.user, 'true' ).subscribe(\n      response => {\n        this.token = response.token;\n        console.log( this.token );\n        if ( this.token.length <= 0 ) {\n          this.status = 'error';\n        } else {\n          localStorage.setItem( 'token', this.token );\n          this.status = 'success';\n        }\n      }, error => {\n        const errorMessage = <any>error;\n        console.log( errorMessage );\n        if ( errorMessage !== null ) {\n          this.status = 'error';\n        }\n      }\n    );\n  }\n\n  newUser() {\n    this._router.navigate(['/register']);\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<h1>{{ title }}</h1>\\n<hr>\\n<form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(registerForm)\\\">\\n\\n    <div class=\\\"alert alert-success\\\" *ngIf=\\\"status == 'success' \\\">\\n        Register success!! \\n        <a [routerLink]=\\\"['/login']\\\">Sign In Here</a>\\n      </div>\\n    \\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"status == 'error' \\\">\\n       Please try again in another data\\n      </div>\\n    <div class=\\\"form-row\\\">\\n\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"inputName4\\\">First Name</label>\\n          <input type=\\\"text\\\"\\n                name=\\\"name\\\"\\n                #name=\\\"ngModel\\\"\\n                [(ngModel)]=\\\"user.name\\\"\\n                class=\\\"form-control\\\"\\n                required\\n                placeholder=\\\"First Name\\\">\\n          <div *ngIf=\\\"name.errors?.required\\\"\\n                class=\\\"form-control-feedback\\\">\\n                Name is required!\\n          </div>\\n        </div>\\n  \\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"inputLastName4\\\">Last Name</label>\\n          <input type=\\\"text\\\"\\n                  name=\\\"last_name\\\"\\n                  #last_name=\\\"ngModel\\\"\\n                  [(ngModel)]=\\\"user.last_name\\\"\\n                 class=\\\"form-control\\\"\\n                 required\\n                 placeholder=\\\"Last Name\\\">\\n        </div>\\n  \\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"inputEmail\\\">Email</label>\\n          <input type=\\\"email\\\"\\n              name=\\\"email\\\"\\n              #email=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"user.email\\\"\\n              class=\\\"form-control\\\"\\n              required\\n              pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\"\\n              placeholder=\\\"Email\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"inputPassword\\\">Password</label>\\n          <input type=\\\"password\\\"\\n              name=\\\"password\\\"\\n              #password=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"user.password\\\"\\n              class=\\\"form-control\\\"\\n              required\\n              placeholder=\\\"Password\\\">\\n      </div>\\n    \\n    <button\\n       type=\\\"submit\\\"\\n       class=\\\"btn btn-primary\\\"\\n      [disabled]=\\\"!registerForm.form.valid\\\">Sign in</button>\\n  </form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n  providers: [ UserService ]\n})\nexport class RegisterComponent implements OnInit {\n\n  public title: string;\n  public user: User;\n  public status: string;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _userService: UserService\n  ) {\n    this.title = 'Please fill in all the fields';\n    this.user = new User('', '', '', '', '', '', '');\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit( form ) {\n    this._userService.register( this.user ).subscribe(\n      response => {\n        if (response.user && response.user._id) {\n          this.status = 'success';\n          form.reset();\n        } else {\n          this.status = 'error';\n        }\n      }, error => {\n        console.log(<any>error);\n      }\n    );\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  user-week works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-week',\n  templateUrl: './user-week.component.html',\n  styleUrls: ['./user-week.component.css']\n})\nexport class UserWeekComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Message {\n    constructor(\n        public _id: string,\n        public text: string,\n        public date: string\n    ) {}\n}\n","export class User {\n    constructor(\n        public _id: string,\n        public name: string,\n        public last_name: string,\n        public email: string,\n        public password: string,\n        public role: string,\n        public level: string\n    ) {}\n}\n","export let GLOBAL = {\n    url: '/api/'\n};\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/user';\nimport { Message } from '../models/message';\nimport { GLOBAL } from './global';\n\n@Injectable()\nexport class UserService {\n\n    public url: string;\n    public identity;\n    public token;\n    public status;\n\n    constructor( public _http: HttpClient ) {\n        this.url = GLOBAL.url;\n    }\n\n    register( user: User ): Observable<any> {\n        const params = JSON.stringify( user );\n        const headers = new HttpHeaders().set('Content-Type', 'application/json');\n        return this._http.post( this.url + 'register', params, { headers : headers });\n    }\n\n    signup( user: any, gettoken = 'false'): Observable<any> {\n        if ( gettoken !== 'false') {\n            user.gettoken = gettoken;\n        }\n\n        const params = JSON.stringify( user );\n        const headers = new HttpHeaders().set('Content-Type', 'application/json');\n        return this._http.post( this.url + 'login', params, { headers : headers });\n    }\n\n    getIdentity() {\n        const identity = JSON.parse( localStorage.getItem( 'identity' ) );\n        if ( identity !== 'undefined' ) {\n            this.identity = identity;\n        } else {\n            this.identity = null;\n        }\n        return this.identity;\n    }\n\n    getToken() {\n        const token = localStorage.getItem('token');\n        if ( token !== 'undefined' ) {\n            this.token = token;\n        } else {\n            this.token = null;\n        }\n        return this.token;\n    }\n\n    getMessage(): Observable<any> {\n        const headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\n                            .set('Authorization', this.getToken());\n        return this._http.get( this.url + 'get-message', { headers : headers });\n    }\n\n    sendMessage( message: Message ): Observable<any> {\n        console.log(message);\n        const params = JSON.stringify( message );\n        const headers = new HttpHeaders().set('Content-Type', 'application/json').set('Authorization', this.getToken());\n        return this._http.post( this.url + 'message', message, { headers: headers });\n    }\n\n    deleteMessage( messageId ): Observable<any> {\n        const headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded').set('Authorization', this.getToken());\n        return this._http.delete( this.url + 'delete-message/' +  messageId, { headers: headers });\n    }\n\n    getUsers(): Observable<any> {\n        const headers = new HttpHeaders().set('Content-Type', 'application/json').set('Authorization', this.getToken());\n        return this._http.get( this.url + 'users', { headers: headers });\n    }\n\n    deleteUser( user: User ): Observable<any> {\n        const headers = new HttpHeaders().set('Content-Type', 'application/json').set('Authorization', this.getToken());\n        return this._http.delete( this.url + 'delete-user/' + user._id, { headers: headers } );\n    }\n\n    updateUser( user: User): Observable<any> {\n        const params = JSON.stringify( user );\n        const headers = new HttpHeaders().set('Content-Type', 'application/json').set('Authorization', this.getToken());\n        return this._http.put( this.url + 'update-user/' + user._id, params, { headers : headers });\n    }\n\n    adminUpdateUser( user: User ): Observable<any> {\n        const params = JSON.stringify( user );\n        const headers = new HttpHeaders().set('Content-Type', 'application/json').set('Authorization', this.getToken());\n        return this._http.put( this.url + 'admin-update-user/' + user._id, params, { headers: headers });\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}